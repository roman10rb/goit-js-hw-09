{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,SACpCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAIxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA4BbR,EAAWe,iBAAiB,UArB5B,SAA0BC,GACxBA,EAAMC,iBACL,MAAMC,EAAkBC,OAAOd,EAASe,OACxC,IAAIC,EAAQF,OAAOhB,EAAQiB,OAC5B,MAAME,EAAcH,OAAOf,EAAOgB,OAClC,GAAIC,EAAQ,GAAKC,EAAc,GAAKJ,GAAmB,EACrDK,EAAAzB,GAAS0B,OAAOC,QAAQ,oCAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAiBQ,GAAK,EAExCpB,EAAcoB,EAAE,EAAGL,GAAOM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,KACxCe,EAAAzB,GAAS0B,OAAOI,QAAQ,uBAAqBrB,QAAiBC,SAAYqB,OAE3E,EAAOtB,WAAUC,WAChBe,EAAAzB,GAAQ0B,OAACC,QAAO,sBAASlB,QAA8BC,SAE3Da,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'; \n\nconst submitForm = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n  \n};\n\n\n\nfunction handleSubmitForm(event) {\n  event.preventDefault();\n   const amountOfPromise = Number(amountEl.value);\n   let delay = Number(delayEl.value);\n  const stepPromise = Number(stepEl.value);\n  if (delay < 0 || stepPromise < 0 || amountOfPromise <= 0) {\n    Notiflix.Notify.failure(`❌ Promise can't be created `);\n    return;\n  }\n  for (let i = 0; i < amountOfPromise; i += 1) {\n\n    createPromise(i+1, delay).then(({ position, delay }) =>\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += stepPromise;\n  };\n\n};\nsubmitForm.addEventListener('submit', handleSubmitForm);\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitForm","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","amountOfPromise","Number","value","delay1","stepPromise","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.d490678e.js.map"}